# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: homepage-service-account
#   namespace: default
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   namespace: default
#   name: homepage-role
# rules:
#   - apiGroups: [""]
#     resources: ["nodes", "pods"]
#     verbs: ["get", "list"]
#   - apiGroups: ["metrics.k8s.io"]
#     resources: ["nodes"]
#     verbs: ["get", "list"]
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: homepage-role-binding
#   namespace: default
# subjects:
#   - kind: ServiceAccount
#     name: frontend-service-account
#     namespace: default
# roleRef:
#   kind: Role
#   name: frontend-role
#   apiGroup: rbac.authorization.k8s.io
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: homepage
  template:
    metadata:
      labels:
        app: homepage
    spec:
      containers:
        - name: homepage
          image: docker.io/keanuwatts/theclusterflux:homepage
          imagePullPolicy: Always
      imagePullSecrets:
        - name: dockerhub-secret
---
apiVersion: v1
kind: Service
metadata:
  name: homepage
spec:
  selector:
    app: homepage
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: homepage
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - homepage.theclusterflux.com
    secretName: theclusterflux
  rules:
  - host: homepage.theclusterflux.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: homepage
            port:
              number: 8080
